{"version":3,"file":"component---src-templates-portfolio-js-c276ca16bd8f6a453a05.js","mappings":"8JA6CA,IAzCcA,IAA4C,IAA3C,YAAEC,EAAW,WAAEC,KAAeC,GAAOH,EACnD,MAAMI,EAAWH,EAAYI,SAAS,iBAAmB,IAAM,EASzDC,EAAc,CACnBC,SAAU,WACVC,KAAMJ,EACNK,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,MAAO,OACPC,OAAO,eAAgBT,EAAQ,MAC/BU,UAAW,SACXC,SAAU,UAGX,OACCC,EAAAA,cAAA,OACCC,UAAU,uBACVC,MAtBqB,CACtBX,SAAU,WACVQ,SAAU,SACVH,MAAO,OACPO,WAAY,WAoBXH,EAAAA,cAAA,UACCI,IAAKnB,EACLoB,MAAOnB,EACPoB,MAAM,0EACNC,YAAY,IACZC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,EACfR,MAAOZ,EACPqB,UAAU,OAEN,C,gHC8BR,MArDcxB,IACZ,MAAM,EAACyB,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,WAAS,GAEzCC,GAlBYC,EAkBK7B,EAAM8B,KAAKD,aAjBhBE,eACPlB,EAAAA,cAACmB,EAAAA,EAAK,CAAClC,YAAa+B,EAAYE,iBAC9BF,EAAYI,UAEnBpB,EAAAA,cAACqB,EAAAA,EAAW,CACVC,MAAON,EAAYI,UAAUG,gBAAgBC,gBAC7CvB,UAAU,aAIPD,EAAAA,cAAAA,EAAAA,SAAA,MAXOgB,MAoBlB,MAAMS,GAAS,GAAGtC,EAAM8B,KAAKD,YAAYX,OAAQqB,QAC7C,gBACA,IAGEC,EACJ3B,EAAAA,cAAA,OAAK4B,wBAAyB,CAAEC,OAAQ1C,EAAM8B,KAAKa,QAG/CC,EAASnB,EACbZ,EAAAA,cAAA,KAAGgC,KAAI,IAAMP,GACXzB,EAAAA,cAAA,UAAQiC,QAASA,IAAMpB,GAAgBD,GAAcX,UAAU,UAAS,cAK1ED,EAAAA,cAAA,UAAQiC,QAASA,IAAMpB,GAAgBD,GAAcX,UAAU,UAAS,aAO1E,OACED,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WAASC,UAAU,sCAAsCiC,GAAIT,GAC3DzB,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,UAAKb,EAAM8B,KAAKD,YAAYX,OAE5BL,EAAAA,cAAA,UAAQC,UAAU,yBACfc,EACDf,EAAAA,cAAA,cAAYC,UAAU,gCACnBd,EAAM8B,KAAKD,YAAYmB,aAI5BnC,EAAAA,cAAA,SAAIb,EAAM8B,KAAKD,YAAYoB,aAE1BxB,GAAee,EAEfxC,EAAM8B,KAAKoB,SAAWN,IAG3B/B,EAAAA,cAAA,WACC,E,UC1CP,MAhB2Bb,IACzB,MAEMmD,EAAOnD,EAAMmD,KACbjC,GAHckC,EAGKpD,EAAMqD,YAAYnC,OAHXoC,OAAO,GAAGC,cAAgBH,EAAII,MAAM,GAAhDJ,MAIpB,MAAMK,EAAQN,EAAKO,kBAAkBC,MACrC,OACE9C,EAAAA,cAAC+C,EAAAA,EAAM,CAAC1C,MAAOA,GACbL,EAAAA,cAACgD,EAAAA,EAAG,CAAC3C,MAAOA,IACXuC,EAAMK,KAAIjE,IAAe,IAAd,KAAEiC,GAAMjC,EAClB,OAAOgB,EAAAA,cAACkD,EAAI,CAACC,IAAKlC,EAAKmC,OAAOC,KAAMpC,KAAMA,GAAQ,IAE7C,C","sources":["webpack://gatsby-london-after-midnight/./src/components/video.js","webpack://gatsby-london-after-midnight/./src/components/post.js","webpack://gatsby-london-after-midnight/./src/templates/portfolio.js"],"sourcesContent":["/** @format */\n\nimport React from \"react\";\n\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => {\n\tconst CROP_TOP = videoSrcURL.includes(\"instagram.com\") ? 300 : 0; // Adjust this value to crop the top of the video\n\n\tconst containerStyle = {\n\t\tposition: \"relative\",\n\t\toverflow: \"hidden\",\n\t\twidth: \"100%\",\n\t\tpaddingTop: \"56.25%\" /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */,\n\t};\n\n\tconst iFrameStyle = {\n\t\tposition: \"absolute\",\n\t\ttop: -CROP_TOP,\n\t\tleft: 0,\n\t\tbottom: 0,\n\t\tright: 0,\n\t\twidth: \"100%\",\n\t\theight: `calc(100% + ${CROP_TOP}px)`,\n\t\tmarginTop: \"-100px\",\n\t\toverflow: \"hidden\",\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"embedVideo-container\"\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<iframe\n\t\t\t\tsrc={videoSrcURL}\n\t\t\t\ttitle={videoTitle}\n\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\tframeBorder=\"0\"\n\t\t\t\twebkitallowfullscreen=\"true\"\n\t\t\t\tmozallowfullscreen=\"true\"\n\t\t\t\tallowFullScreen\n\t\t\t\tstyle={iFrameStyle}\n\t\t\t\tscrolling=\"no\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\nexport default Video;\n","import React, { useState } from \"react\";\nimport Video from \"./video\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\n  const getMedia = (frontmatter) => {\n    if (frontmatter.videoSourceURL) {\n      return <Video videoSrcURL={frontmatter.videoSourceURL} />;\n    } else if (frontmatter.thumbnail) {\n      return (\n        <GatsbyImage \n          image={frontmatter.thumbnail.childImageSharp.gatsbyImageData}\n          className=\"kg-image\"\n        />\n      );\n    } else {\n      return <></>;\n    }\n  };\n\nconst Post = (props) => {\n  const [showContent, setShowContent] = useState(false);\n\n  const media = getMedia(props.node.frontmatter);\n\n  const postId = `${props.node.frontmatter.title}`.replace(\n      /[^a-zA-Z0-9]/g,\n      \"\"\n    );\n\n  const content = (\n    <div dangerouslySetInnerHTML={{ __html: props.node.html }}></div>\n  );\n\n  const button = showContent ? (\n    <a href={`#${postId}`}>\n      <button onClick={() => setShowContent(!showContent)} className=\"button\">\n        Show less\n      </button>\n    </a>\n  ) : (\n    <button onClick={() => setShowContent(!showContent)} className=\"button\">\n      Show more\n    </button>\n  );\n    \n\n\n  return (\n    <>\n      <article className=\"post-content page-template no-image\" id={postId}>\n        <div className=\"post-content-body\">\n          <h2>{props.node.frontmatter.title}</h2>\n\n          <figure className=\"kg-card kg-image-card\">\n            {media}\n            <figcaption className=\"gatsby-resp-image-figcaption\">\n              {props.node.frontmatter.figcaption}\n            </figcaption>\n          </figure>\n\n          <p>{props.node.frontmatter.description}</p>\n\n          {showContent && content}\n\n          {props.node.excerpt && button}\n        </div>\n      </article>\n      <hr />\n    </>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Post from \"../components/post\";\nimport Seo from \"../components/seo\";\n\nimport \"../style/normalize.css\";\nimport \"../style/all.scss\";\n\nconst PortfolioTemplate = (props) => {\n  const capitalise = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const data = props.data;\n  const title = capitalise(props.pageContext.title);\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout title={title}>\n      <Seo title={title} />\n      {posts.map(({ node }) => {\n        return <Post key={node.fields.slug} node={node} />;\n      })}\n    </Layout>\n  );\n};\n\nexport default PortfolioTemplate;\n\nexport const indexQuery = graphql`\n  query PortfolioByTopic($regex: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $regex } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          excerpt\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            description\n            title\n            figcaption\n            videoSourceURL\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: CONSTRAINED\n                  width: 1360\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","videoSrcURL","videoTitle","props","CROP_TOP","includes","iFrameStyle","position","top","left","bottom","right","width","height","marginTop","overflow","React","className","style","paddingTop","src","title","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","scrolling","showContent","setShowContent","useState","media","frontmatter","node","videoSourceURL","Video","thumbnail","GatsbyImage","image","childImageSharp","gatsbyImageData","postId","replace","content","dangerouslySetInnerHTML","__html","html","button","href","onClick","id","figcaption","description","excerpt","data","str","pageContext","charAt","toUpperCase","slice","posts","allMarkdownRemark","edges","Layout","Seo","map","Post","key","fields","slug"],"sourceRoot":""}